/*
Это файл конфигурации проекта. Таких файлов может быть несколько. Например, если нужно создать несколько похожих проектов,
отличающихся картинками, звуками или незначительным поведением. Если же не нужно создавать несколько похожих проектов,
то второй файл нужно удалить. После создания release сборки, для каждого файла настроек будет создана своя версия проекта.
*/

{
	/*
	Название (title) и кодовое имя версии проекта (name). Оба этих поля нужно заменить на соответствующие новому проекту.
	Кодовое имя проекта используется для именования папок (и как имя версии в Dashboard). Должно быть разным в каждом файле настроек
	(если их несколько в проекте). Должно содержать текст описывающий особенности этой версии настроек (если файлов настроек несколько)
	или текст default (если файл настроек один).

	Например 'track-builder' а не 'lego-track-builder'.
	*/
	"title": "sos halloween boss td",
	"name": "tweak",

	"version": "1.0",

	"debug": {"default": false, "type": "boolean"},
	"debug-logger": {"default": "custom", "type": "select", "values": ["native", "custom", "none"]},

	"publisher": "none",
	"publisher-settings": {"type": "key-value", "default": {"width": 320, "height": 480, "fixed-size": false}, "description": "Various settings which needed for specific ad network."},

	"viewport-size": {"type": "select", "default": "window-inner-dimensions", "values": ["mraid-max-size", "mraid-screen-size", "window-inner-dimensions", "screen-size"]},
	"viewport-size-protection": {"default": true, "type": "boolean"},
	"viewport-aspect-ratio": {"default": "none", "type": "select", "values": ["portrait", "landscape", "none"], "description": "Viewport sizes aspect ratio. Set it to \"portrait\" or \"landscape\" if you want always show your ad in \"portrait\" or \"landscape\" mode."},
	"viewport-aspect-ratio-portrait": {"default": 0.75, "type": "number", "description": "Maximum ratio of width to height. Used if \"Viewport aspect ratio\" is set to \"portrait\""},
	"viewport-aspect-ratio-landscape": {"default": 0.75, "type": "number", "description": "Maximum ratio of height to width. Used if \"Viewport aspect ratio\" is set to \"landscape\""},

	"assets-path": {"default": "", "type": "string"},

	"target-url": {"default:ios": "https://apps.apple.com/us/app/state-of-survival-zombie-war/id1452474937", "default:android": "https://play.google.com/store/apps/details?id=com.kingsgroup.sos", "default:amazon": "", "default": "https://play.google.com/store/apps/details?id=com.kingsgroup.sos", "type": "string"},
	"web-mode": {"default": "redirect", "type": "select", "values": ["alert", "redirect", "mraid", "none"]},

	/*
	Здесь место для новых настроек. Созданных специально для конкретного проекта.
	Нужно обязательно указывать поля "default", "type", "editor": ["title", "description", "section": "main", "control": "input|switch|radio|select|range|number|color"]

	Пример:
	"game-revenge-button-anim": {"default": 2, "type": "select", "values": [1, 2], "editor": {"title": "Revenge button animation", "description": "Choose one of two revenge button animation styles: 1 - pulsation, 2 - chaotic motion.", "section": "main", "control": "range", "min": 0.1, "max": 5, "step": 0.1, "autoApplyChanges": true}},

	Для того чтобы в нашем Dashboard можно было изменять эти настройки без перезагрузки фрейма с проектом рекламы, нужно прописать ключ: "autoApplyChanges": true в объекте "editor".
	В этом случае Dashboard будет знать что перезагружать фрейм не нужно. Вместо этого он отправить значение этой настройки прямо в код запущенного проекта через window.sendMessage.
	Перехватить эту информацию в коде игры можно через событие "Setting Changed" в которое передастся имя настроки и новое значение. При этом в объекте Settings оно уже будет изменено.

	*/
	"character": "Tweak", //Wacko || Tweak

    "aggressive-mode": {"default": true, "type": "boolean", "editor": {"title": "Aggressive Mode", "description": "", "section": "main", "control": "switch", "autoApplyChanges": true}},

    "enable-intro": {"default": true, "type": "boolean", "editor": {"title": "Enable intro", "description": "", "section": "main", "control": "switch", "autoApplyChanges": true}},
	"enable-teaser": {"default": false, "type": "boolean", "editor": {"title": "Enable teaser", "description": "", "section": "main", "control": "switch", "autoApplyChanges": true}},
    "max-zombies": {"default": 100, "type": "number", "editor": {"title": "Maximum number of generated zombies", "description": "", "section": "main", "control": "input", "autoApplyChanges": true}},
    "zombie_dmg": {"default": 1, "type": "number", "editor": {"title": "Zombie damage", "description": "", "section": "main", "control": "input", "autoApplyChanges": true}},
    "zombie_hp": {"default": 200, "type": "number", "editor": {"title": "Zombie hp", "description": "", "section": "main", "control": "input", "autoApplyChanges": true}},
    "wall-hp": {"default": 4, "type": "number", "editor": {"title": "Gate strength", "description": "", "section": "main", "control": "input", "autoApplyChanges": true}},
    "tower-hp": {"default": 2, "type": "number", "editor": {"title": "WatchTower HP", "description": "", "section": "main", "control": "input", "autoApplyChanges": true}},


	"tween-factor-gameplay": {"default": 1, "type": "number"},
	"tween-factor-tutorial": {"default": 1, "type": "number"},
	"tween-factor-end-screen": {"default": 1, "type": "number"},
	"tween-factor-other": {"default": 1, "type": "number"},

	/*
	Путь к собранным js файлам. Должен быть таким же как написано в package.json.
	"game-name" нужно заменить на имя разработчика-или-издателя + имя игры. Например 'lego-track-builder', а не просто 'track-builder'.
	Соответствующие изменения нужно внести и в package.json.
	*/
	"game-code-url": "Builds/kingsgroupgames-sos-halloween-boss-td.min.js",
	"game-loader-url": "Builds/kingsgroupgames-sos-halloween-boss-td-loader.min.js",

	/*
	Настройки вида и расположения фонового изображения, логотипа, прогресса загрузки и логотипа издателя на экране загрузки.
	Чтобы красиво расположить все эти элементы на экране нужно менять свойства left:portrait, right:portrait, left:landscape,
	right:landscape и т.д. для логотипа (loading-icon-styles) и прогресса загрузки (loading-progress-styles), а для логотипа
	издателя нужно менять width и height. Всё это в процентах на подходящие для текущего проекта значения. Так же нужно обратить
	внимание на тень. В некоторых случаях она нужна (если логотип сливается с фоном), а в некоторых тень лишняя, если и так
	логотипы хорошо видны.
	*/
	"loading-overlay-styles": {"type": "css", "default": {}},
    "loading-overlay-show-time": {"type": "number", "default": 200},
    "loading-overlay-hide-time": {"type": "number", "default": 1000},
    "loading-background-styles": {"type": "css", "default": {"background": "radial-gradient(#1f2438, #10131c)", "filter": "blur(5px)", "transform": "scale(1.4)"}},
    "loading-icon-styles": {"type": "css", "default": {"background": "url($logotype$) no-repeat scroll center center / contain", "left:portrait": "20%", "right:portrait": "20%", "top:portrait": "25%", "bottom:portrait": "35%", "left:landscape": "30%", "right:landscape": "30%", "top:landscape": "25%", "bottom:landscape": "35%", "filter": "drop-shadow(0px 0px 5px #000000)"}},
    "loading-icon-publisher-styles": {"type": "css", "default": {"background": "", "width": "35%", "height": "9%", "filter": "drop-shadow(0px 0px 5px #000000)"}, "hideInPortfolio": true},
    "loading-progress-styles": {"type": "css", "default": {"background": "rgba(255, 255, 255, 0.2)", "left:portrait": "34%", "right:portrait": "34%", "top:portrait": "60%", "bottom:portrait": "25%", "left:landscape": "40%", "right:landscape": "40%", "top:landscape": "70%", "bottom:landscape": "25%", "filter": "drop-shadow(0px 0px 3px #000000)"}},
    "loading-progress-fill-styles": {"type": "css", "default": {"background": "rgba(255, 255, 255, 0.8)"}},
    "loading-code-progress-percent": 0.5,
    "loading-click-out": {"default": true, "type": "boolean"},
    "loading-text": {"type": "string", "default": ""},
    "loading-text-styles": {"type": "css", "default": {"color": "#ffffff", "fontFamily": "Arial", "fontWeight": "bold", "fontSize:portrait": "34px", "fontSize:landscape": "34px", "textAlign": "center", "left:portrait": "15%", "right:portrait": "15%", "top:portrait": "40%", "bottom:portrait": "30%", "left:landscape": "35%", "right:landscape": "35%", "top:landscape": "55%", "bottom:landscape": "20%"}},
    "loading-disable-in-base64": {"default": true, "type": "boolean"},

	"load-on": {"default": "immediately", "type": "select", "values": ["immediately", "none", "interaction"], "description": "If you need to load ad manually set this to 'none' and use 'Loader.load()' command."},
	"start-on": {"default": "viewable", "type": "select", "values": ["load", "ready", "viewable", "after-video", "none", "interaction"], "description": "If you need to show ad manually set this to 'none' and use 'App.startGame()' command."},
	"cta-only": {"default": false, "type": "boolean"},
	"end-screen-click-out": {"default": true, "type": "boolean"},
	"end-screen-click-out-block": {"default": 1000, "type": "number"},
	"click-out-multiple": {"default": 1000, "type": "number"},
	"try-again": {"default": 1, "type": "number"},

	"gameplay-timeout": {"default": 0, "type": "number"},
	"autoplay-timeout": {"default": 0, "type": "number"},
	"idle-timeout": {"default": 0, "type": "number"},

	"custom-close-button": {"default": 10000, "type": "number"},
	"close-button-container-styles": {"type": "css", "default": {"opacity": "0.4", "width": "30px", "height": "30px", "right": "7px", "top": "7px"}},
	"close-button-bar-styles": {"type": "css", "default": {"strokeWidth": 5, "color": "#FFF", "trailColor": "#eee", "trailWidth": 1.1, "svgStyle": null}},
	"close-button-styles": {"type": "css", "default": {"width": "16px", "height": "16px", "right": "7px", "top": "7px", "backgroundImage": "url($close-button$)", "backgroundSize": "80%"}},
	"close-button-timer-styles": {"type": "css", "default": {"width": "17px", "height": "16px", "right": "7px", "top": "7px", "lineHeight": "16px", "text-align": "center", "fontFamily": "Arial", "fontSize": "16px", "color": "#FFF"}},

	"bottom-banner": {"default": false, "type": "boolean"},
    "bottom-banner-button-animation": {"default": true, "type": "boolean"},
    "bottom-banner-rating": {"default": 90, "type": "number"},
    "bottom-banner-rating-styles": {"type": "css", "default": {"width": 250, "height": 40, "left": 247, "top": 160}},
    "bottom-banner-background-styles": {"type": "css", "default": {"width": 1240, "bottom": 20, "left": -620, "borderRadius": 20, "backgroundColor": "#ffffff", "opacity": 1}},
    "bottom-banner-content-styles": {"type": "css", "default": {"width": 1240, "bottom": 20, "left": -620}},
    "bottom-banner-icon-styles": {"type": "css", "default": {"width": 200, "height": 200, "left": 25, "top": 26, "borderRadius": 20}},
    "bottom-banner-title-text": {"default": "State of Survival", "type": "string"},
    "bottom-banner-title-styles": {"type": "css", "default": {"left": 250, "top": 15, "color": "#333333", "fontFamily": "Arial", "fontSize": 80, "fontWeight": "400", "fontStyle": "normal"}},
    "bottom-banner-description-text": {"default": "Kingsgroupgames", "type": "string"},
    "bottom-banner-description-styles": {"type": "css", "default": {"left": 250, "top": 100, "color": "#777777", "fontFamily": "Arial", "fontSize": 45, "fontWeight": "400", "fontStyle": "normal"}},
    "bottom-banner-button-text": {"default": "Download", "type": "string"},
    "bottom-banner-button-styles": {"type": "css", "default": {"width": 380, "height": 130, "left": 800, "top": 90, "lineHeight": 130, "backgroundColor": "#00a2da", "color": "#ffffff", "borderRadius": 70, "fontFamily": "Arial", "fontSize": 50, "fontWeight": "600", "fontStyle": "normal"}},
    "bottom-banner-cta-text-0-text": {"default": "№1", "type": "string"},
    "bottom-banner-cta-text-0-styles": {"type": "css", "default": {"left": 855, "top": 23, "color": "#555555", "fontFamily": "Arial", "fontSize": 60, "fontWeight": "600", "fontStyle": "normal"}},
    "bottom-banner-cta-text-1-text": {"default": "Games", "type": "string"},
    "bottom-banner-cta-text-1-styles": {"type": "css", "default": {"left": 965, "top": 35, "color": "#777777", "fontFamily": "Arial", "fontSize": 45, "fontWeight": "400", "fontStyle": "normal"}},
    "bottom-banner-star-styles": {"type": "css", "default": {"width": 60, "height": 60, "left": 2710, "bottom": 25, "display": "block"}},
    "bottom-banner-comment-styles": {"type": "css", "default": {"display": "none"}},
    "bottom-banner-comment-duration": {"default": 0, "type": "number"},
    "bottom-banner-comment-0-rating": {"default": 95, "type": "number"},
    "bottom-banner-comment-0-name": {"default": "", "type": "string"},
    "bottom-banner-comment-0-text": {"default": "", "type": "string"},
    "bottom-banner-comment-1-rating": {"default": 100, "type": "number"},
    "bottom-banner-comment-1-name": {"default": "", "type": "string"},
    "bottom-banner-comment-1-text": {"default": "", "type": "string"},
    "bottom-banner-comment-2-rating": {"default": 80, "type": "number"},
    "bottom-banner-comment-2-name": {"default": "", "type": "string"},
    "bottom-banner-comment-2-text": {"default": "", "type": "string"},
    "bottom-banner-star": {"type": "css", "default": {"backgroundImage": "url($banner-star$)"}},
    "bottom-banner-icon": {"type": "css", "default": {"backgroundImage": "url($banner-icon$)"}},

    "top-banner": {"default": false, "type": "boolean"},
    "top-banner-button-animation": {"default": true, "type": "boolean"},
    "top-banner-rating": {"default": 90, "type": "number"},
    "top-banner-rating-styles": {"type": "css", "default": {"width": 250, "height": 40, "left": 247, "top": 160}},
    "top-banner-background-styles": {"type": "css", "default": {"width": 1240, "top": 20, "left": -620, "borderRadius": 20, "backgroundColor": "#ffffff", "opacity": 1}},
    "top-banner-content-styles": {"type": "css", "default": {"width": 1240, "top": 20, "left": -620}},
    "top-banner-icon-styles": {"type": "css", "default": {"width": 200, "height": 200, "left": 25, "top": 26, "borderRadius": 20}},
    "top-banner-title-text": {"default": "State of Survival", "type": "string"},
    "top-banner-title-styles": {"type": "css", "default": {"left": 250, "top": 15, "color": "#333333", "fontFamily": "Arial", "fontSize": 80, "fontWeight": "400", "fontStyle": "normal"}},
    "top-banner-description-text": {"default": "Kingsgroupgames", "type": "string"},
    "top-banner-description-styles": {"type": "css", "default": {"left": 250, "top": 100, "color": "#777777", "fontFamily": "Arial", "fontSize": 45, "fontWeight": "400", "fontStyle": "normal"}},
    "top-banner-button-text": {"default": "Download", "type": "string"},
    "top-banner-button-styles": {"type": "css", "default": {"width": 380, "height": 130, "left": 800, "top": 90, "lineHeight": 130, "backgroundColor": "#00a2da", "color": "#ffffff", "borderRadius": 70, "fontFamily": "Arial", "fontSize": 50, "fontWeight": "600", "fontStyle": "normal"}},
    "top-banner-cta-text-0-text": {"default": "№1", "type": "string"},
    "top-banner-cta-text-0-styles": {"type": "css", "default": {"left": 855, "top": 23, "color": "#555555", "fontFamily": "Arial", "fontSize": 60, "fontWeight": "600", "fontStyle": "normal"}},
    "top-banner-cta-text-1-text": {"default": "Games", "type": "string"},
    "top-banner-cta-text-1-styles": {"type": "css", "default": {"left": 965, "top": 35, "color": "#777777", "fontFamily": "Arial", "fontSize": 45, "fontWeight": "400", "fontStyle": "normal"}},
    "top-banner-star-styles": {"type": "css", "default": {"width": 60, "height": 60, "left": 2710, "bottom": 25, "display": "block"}},
    "top-banner-comment-styles": {"type": "css", "default": {"display": "none"}},
    "top-banner-comment-duration": {"default": 0, "type": "number"},
    "top-banner-comment-0-rating": {"default": 95, "type": "number"},
    "top-banner-comment-0-name": {"default": "", "type": "string"},
    "top-banner-comment-0-text": {"default": "", "type": "string"},
    "top-banner-comment-1-rating": {"default": 100, "type": "number"},
    "top-banner-comment-1-name": {"default": "", "type": "string"},
    "top-banner-comment-1-text": {"default": "", "type": "string"},
    "top-banner-comment-2-rating": {"default": 80, "type": "number"},
    "top-banner-comment-2-name": {"default": "", "type": "string"},
    "top-banner-comment-2-text": {"default": "", "type": "string"},
    "top-banner-star": {"type": "css", "default": {"backgroundImage": "url($banner-star$)"}},
    "top-banner-icon": {"type": "css", "default": {"backgroundImage": "url($banner-icon$)"}},

	"interstitial-timeout": {"default": 35000, "type": "number"},
	"interstitial-action": {"default": "none", "type": "select", "values": ["cta", "redirect", "none"]},

	"redirect-timeout": {"default": 0, "type": "number"},
	"redirect-clicks": {"default": 0, "type": "number"},

	"video": {"default": "", "type": "string"},
	"video-width": {"default": 1024, "type": "number"},
	"video-height": {"default": 576, "type": "number"},

	//Эта настройка отключает лишь стартовые анимации вводящие пользователя в игру
	//Если в игре есть какой-либо стартовый экран (с кнопкой начать игру или без такой кнопки)
	//то для его отключения нужно создать отдельную новую настройку
	"intro": {"default": true, "type": "boolean"},

	"tutorial": {"default": true, "type": "boolean"},
	"tutorial-timeout": {"default": 500, "type": "number"},

	"locale": {"default": "auto", "type": "select", "values": ["auto", "en", "de", "it", "fr", "nl", "sv"]},

	"assets-quality": {"default": "high", "type": "select", "values": ["medium", "high", "low"]},
	"filters-quality": {"default": 1, "type": "number"},
	"particles-quality": {"default": 1, "type": "number"},
	"force-canvas-renderer": {"default": false, "type": "boolean"},
	"precision-fragment": {"default": "mediump", "type": "select", "values": ["lowp", "mediump", "highp"]},

	"sounds": {"default": "delayed", "type": "select", "values": [true, false, "delayed"]},
	"sounds-mute": {"default": "viewable", "type": "select", "values": ["viewable", "interaction", "muted"]},
	"sounds-mute-button": {"default": false, "type": "boolean"},

	"creative-template-device": {"default": "iPhone", "type": "select", "values": ["iPhone", "iPad", "iPhoneX"]},
	"creative-template-orientation": {"default": "landscape", "type": "select", "values": ["portrait", "landscape"]},

	//Сюда нужно вписать все события используемые в игре
	//Специально созданные события для этого проекта нужно вписать в начало
	//Затем типичные события, которые автоматически срабатывают во всех креативах
	"track-events": {"type": "info", "default": [
		//Новые события вписать здесь с хорошим описанием
		{"name": "Loader Initialized", "description": "Earliest creative launch event"},
		{"name": "Code Loaded", "description": "Creative code loaded, but assets still not loaded"},
		{"name": "Assets Loaded", "description": "Both creative code and assets loaded"},
		{"name": "Creative Showed", "description": "All needed loaded and creative showed to user", "mandatory": true},
		{"name": "Game Starts", "description": "Main gameplay started"},
		{"name": "Click", "description": "Any click on any place on the screen"},
		{"name": "Interaction", "description": "Meaningful user action / successful progress"},
		{"name": "Interaction 1", "description": "First meaningful user action", "mandatory": true},
		{"name": "Interaction 2", "description": "Second meaningful user action", "mandatory": true},
		{"name": "Interaction 3", "description": "Third meaningful user action", "mandatory": true},
		{"name": "Interaction 4", "description": "Fourth meaningful user action", "mandatory": true},
		{"name": "Interaction 5", "description": "Fifth meaningful user action", "mandatory": true},
		{"name": "Interstitial Timeout", "description": "End of interstitial timeout (which displayed in the top right corner)"},
		{"name": "Interstitial Timeout - CTA", "description": "End of interstitial timeout in case if it direct user to end screen"},
		{"name": "Interstitial Timeout - Click Out", "description": "End of interstitial timeout in case if it direct user to the store"},
		{"name": "Gameplay Timeout", "description": "End of gameplay timeout (which direct user to end screen)"},
		{"name": "Autoplay Timeout", "description": "End of autoplay timeout (which direct user to main gameplay after welcome screen)"},
		{"name": "Idle Timeout", "description": "End of idle timeout (which direct user to end screen) after player inactivity"},
		{"name": "End Screen Showed", "description": "Game completed (for any reason) and showed end screen.", "mandatory": true},
		{"name": "Click Out", "description": "Direct user to store from any place of creative", "mandatory": true},
		{"name": "Click Out - Loading Screen", "description": "Direct user to store from loading screen"},
		{"name": "Click Out - In Game", "description": "Direct user to store from gameplay screen"},
		{"name": "Click Out - Banner", "description": "Direct user to store from standard creative banner (in gameplay or end screens)"},
		{"name": "Click Out - Interstitial Timeout", "description": "Direct user to store after interstitial timeout"},
		{"name": "Click Out - End Screen", "description": "Direct user to store from end screen"},
		{"name": "Retry", "description": "End screen Retry button pressed"},
		{"name": "Close Button Showed", "description": "Close button displayed after close button timeout (our custom close button, not ad network close button)"},
		{"name": "Close Click", "description": "Close button clicked (our custom close button, not ad network close button)"}
	]},
	"track-events-on-viewable": {"default": true, "type": "boolean"},

	"track-google-analytics-key": {"default": "", "type": "string"},
	"track-google-analytics-actions": {
		"Loader Initialized": [
			["set", "appName", "Game Name First"],
			["set", "appVersion", "1.0"],
			["set", "page", "Loading"],
			["send", "pageview", {"sessionControl": "start"}],
			["send", "event", "Loading", "Impression", "v1.0"]
		],
		"Assets Loaded": [
			["send", "event", "Loading", "Game Loaded", "Not Skipped"]
		],
		"Tutorial Show": [
			["set", "page", "Tutorial"],
			["send", "pageview"],
			["send", "event", "Gameplay", "Tutorial Started"]
		],
		"Game Starts": [
			["set", "page", "Game"],
			["send", "pageview"],
			["send", "event", "Gameplay", "Game Started", "Play 1"]
		],
		"Interaction 1": [
			["send", "event", "Gameplay", "Game Interacted X", "1"]
		],
		"Interaction 2": [
			["send", "event", "Gameplay", "Game Interacted X", "2"]
		],
		"Interaction 3": [
			["send", "event", "Gameplay", "Game Interacted X", "3"]
		],
		"Game Completed": [
			["send", "event", "Gameplay", "Game Completed", "win", 1]
		],
		"End Screen Showed": [
			["set", "page", "End"],
			["send", "pageview"]
		],
		"Retry": [
			["set", "page", "Replay"],
			["send", "pageview"],
			["send", "event", "Gameplay", "Game Started", "Play 2"]
		],
		"Click Out - In Game": [
			["send", "event", "Exit", "CTA Pressed Game"]
		],
		"Click Out - End Screen": [
			["send", "event", "Exit", "CTA Pressed End"]
		],
		"Error": [
			["send", "event", "Diagnostic", "Error"]
		]
	},

	"track-mixpanel-key": {"default": "", "type": "string"},
	"track-mixpanel-actions": {
		"Loader Initialized": "Start Load Assets",
		"Assets Loaded": "Assets Loaded",
		"Game Starts": "Game Started",
		"End Screen Showed": "End Screen Showed",
		"Video Started": "Video Started",
		"Video Progress 10%": "Video Progress 10%",
		"Video Progress 25%": "Video Progress 25%",
		"Video Progress 50%": "Video Progress 50%",
		"Video Progress 75%": "Video Progress 75%",
		"Video Progress 100%": "Video Progress 100%",
		"Final Video Started": "Final Video Started",
		"Final Video Progress 10%": "Final Video Progress 10%",
		"Final Video Progress 25%": "Final Video Progress 25%",
		"Final Video Progress 50%": "Final Video Progress 50%",
		"Final Video Progress 75%": "Final Video Progress 75%",
		"Final Video Progress 100%": "Final Video Progress 100%",
		"Skip Video Click": "Skip Video Click",
		"Retry": "Try Again Clicked",
		"Click Out - Video": "Click Out - Video",
		"Click Out - End Screen": "Click Out - End Screen",
		"Click Out - In Game": "Click Out - In Game",
		"Click Out - Loading Screen": "Click Out - Loading Screen",
		"Click Out - In Banner": "Click Out - In Banner",
		"Error": "Error"
	},
	"track-mixpanel-global-properties": {"type": "object", "value": {}},

	"Gameplay": {

	},

	"Tutorial": {

	},

	"CallToAction": {

	},

	/*
	Ниже нужно поместить все текстовые сообщения используемые в проекте.
	Напрямую писать их в Container секции скринов запрещено ради поддержания
	возможности настраивать локализацию в Dashboard

	Для дефолтных элементов End Card и Banner скринов нужно удалять в свойствах выше заменяемые css свойства

	---------------------------------------------------------------------
	Для сообщений обязательно следует указывать их тип (pixi, three, dom)
	---------------------------------------------------------------------

	*/

	"Localization": {

		"en": {
			"TURRET_1_PRICE": {
				"type": "pixi",
				"text": "200",
				"fontFamily": "Arial-BoldMT",
				"fontStyle": "italic",
				"fontSize": 52,
				"fill": "0xffffff",
				"padding": 20
			},
            "TURRET_2_PRICE": {
                "type": "pixi",
                "text": "300",
                "fontFamily": "Arial-BoldMT",
                "fontStyle": "italic",
                "fontSize": 52,
                "fill": "0xffffff",
                "padding": 20
            },
            "TURRET_3_PRICE": {
                "type": "pixi",
                "text": "400",
                "fontFamily": "Arial-BoldMT",
                "fontStyle": "italic",
                "fontSize": 52,
                "fill": "0xffffff",
                "padding": 20
            },
            "INFECTED_ALERT": {
                "type": "pixi",
                "text": "INFECTED ALERT"
            },
            "HELP_MESSAGE": {
                "type": "pixi",
                "text": "Build a turret!",
                "fontFamily": "Arial-BoldMT",
                "fontSize": 120,
                "fill": "0xffb20d",
                "padding": 20
            },
            "CTA_MESSAGE": {
                "type": "pixi",
                "text": "Swipe to continue",
                "fontFamily": "Arial-BoldMT",
                "fontStyle": "normal",
                "fontSize": 80,
                "fill": "0xffffff",
                "padding": 20,
                "strokeThickness": 6,
                "dropShadow": true,
                "dropShadowAngle": 1.3,
                "dropShadowBlur": 4
            },
			"NICE GAME": {
				"type": "dom",
				"text": "NICE GAME",
				"fill": "#ffffff",
				"fontSize": 30
			},
			"#1 Free Game on the App Store": {
				"type": "dom",
				"text": "#1 Free Game on the App Store"
			},
			"DOWNLOAD": {
				"type": "dom",
				"text": "DOWNLOAD",
				"fontSize": 30
			},
			"OR": {
				"type": "dom",
				"text": "OR"
			},
			"RETRY": {
				"type": "dom",
				"text": "RETRY",
				"fontSize": 30,
				"fill": "#ffffff"
			}
		}
		/*,"ru": {
			"Do you know well?": {
				"type": "dom",
				"text": "Как хорошо ты знаешь?",
				"fontSize": "40px"
			}
		}*/

	},

	"Assets": {

		/*
		Здесь прописываются все необходимые для работы проекта ресурсы (текстуры, звуки, шрифты и данные).

		Все используемые изображения нужно распределить в одну или, обычно, несколько текстур TexturePacker,
		в зависимости от типа файла, даже если будет одна картинка в текстуре (это нужно для сжатия).

		Используется три вида текстур: png32, png8 и jpg.
		В png32 текстуру нужно добавлять изображения содержащие прозрачность и полупрозрачность.
		В png8 текстуру нужно добавлять изображения содержащие прозрачность но без полупрозрачности.
		В jpg текстуру нужно добавлять изображения без прозрачности. Обычно это фоновые прямоугольные картинки.

		В каждую из этих текстур можно класть любой формат файлов: png32, png8, jpg, gif и другие. Но на выходе
		всё это сконвертируется в формат текстуры.

		Размер одной текстуры не должен быть более 2048x2048. Если все изображения не влазят можно
		использовать scale в настройках TexturePacker или несколько текстур. Но нужно помнить, что
		собранная версия для Google должна занимать не более 1Мб места после zip сжатия всех файлов проекта.

		Пример загрузки текстур:
		"texture": {"type": "atlas", "url": "Textures/Texture.json"}, //png32
		"texture-characters": {"type": "atlas", "url": "Textures/TextureCharacters.json"}, //png8
		"texture-backgrounds": {"type": "atlas", "url": "Textures/TextureBackgrounds.json"}, //jpg

		Пример загрузки изображения не находящегося в текстуре (делать так не нужно, кроме текстур для three.js):
		"background.jpg": {"type": "image", "url": "Images/background.jpg"},

		Пример загрузки текстуры для three.js:
		"background.jpg": {"type": "image", "url": "Images/background.jpg", "threeLoader": true},

		Загрузка шрифтов осуществляется через css файлы.
		Если необходимый шрифт есть в Google Fonts - то нужно использовать ссылку на Google Fonts

		Пример:
		"Cinzel": {"type": "web-font", "url": "https://fonts.googleapis.com/css?family=Cinzel:400,700"},

		Если нет нужного шрифта на Google Fonts, то нужно загружать локально.

		Пример:
		"GothamRounded-Bold": {"type": "web-font", "url": "Fonts/GothamRounded-Bold.css"},

		При этом в Google сборке такие шрифты будут запрещены, и нужно в коде проекта использовать
		fallback записи для шрифта.

		Пример:
		styles: {fontFamily: 'GothamRounded-Bold', fontFamilyAdwords: 'Arial', fontSize: '40px', fontSizeAdwords: '45px'}

		Все используемые видеоролики в проекте нужно предзагрузить полностью либо частично.
		При частичной загрузке будет загружено лишь начало а остальное будет догружаться по мере просмотра.

		Пример полной предзагрузки:
		"main video": {"type": "video", "url": "Video/main-video.mp4"},

		Пример частичной загрузки:
		"video-cta": {"type": "video", "url": "Video/cta.mp4", "loadTillCanPlay": true}

		Пример отложенной загрузки (для случаев когда видео нужно только в конце):
		"video-cta": {"type": "video", "url": "Video/cta.mp4", "loadTillCanPlay": "delayed"}

		Пример видео для rovio (нужно использовать декодер jsmpeg, в папке Video/ должно быть видео с расширением .ts, делается через compress)
		"video-cta": {"type": "video", "url": "Video/cta.mp4", "jsmpeg": true}

		Можно остановить полную предзагрузку видео через "throttled": true
		В этом случае загрузится только полмегабайта первые и дальше скрипт будет ждать начала воспроизведения чтобы загрузить остальное
		"video-cta": {"type": "video", "url": "Video/cta.mp4", "jsmpeg": true, "throttled": true}

		Можно указать конкретный процент предзагрузки jsmpeg video:
		"video-cta": {"type": "video", "url": "Video/cta.mp4", "jsmpeg": true, "jsmpeg-preload": 0.8}
		В этом случае 0.8 - это 80%. Погрешность зависит от chunkSize (по умолчанию 0.5мб)

		Если видео выбирается из списка нескольких то нужно прописать все видеофайлы таким образом:
		"video-cta-1": {"type": "video", "url": "Video/1.mp4", "jsmpeg": true, "loadStrategy": "none"}
		"video-cta-2": {"type": "video", "url": "Video/2.mp4", "jsmpeg": true, "loadStrategy": "none"}
		В этом случае эти видеофайлы пройдут всю нужную обработку и сжатие и будут добавлены в релиз но загружаться не будут.
		Отдельно от этого списка нужно прописать основной файл для загрузки как обычно
		"video-cta": {"type": "video", "url": "Video/CTE_LGML014_020_GREAT_ADVENTURE_UK_T1-repack.mp4", "jsmpeg": true}
		Его url можно менять в методе App.js -> prepare

		Для текстур можно указать дополнительные настройки сжатия, если например Facebook версия не получается нужного размера.
		Сжатие можно настраивать для каждой текстуры и для каждого качества отдельно.

		Пример настройки сжатия текстуры:
		"texture": {"type": "atlas", "url": "Textures/Texture.json", "compress": {"medium": {"tinypng": false, "scale": 0.9}, "low": {"tinypng": true, "scale": 0.9}}},

		Пример настройки сжатия картинки:
		"texture": {"type": "image", "url": "Images/background.jpg", "compress": {"medium": false, "low": true}},

		Можно добавить другие файлы и папки для копирования (они будут скопированы в mraid и подобные релизы где используется copySettingsAssets)

		Пример:
		"loading-screen-image": {"type": "custom", "url": "Images/loading-image.png"}

		Можно загружать один из списка ассетов на выбор. Выбор может быть либо случайным, либо привязанным к настройке,
		либо привязанным к другому случайному ассету.

		Пример случайного ассета:
		"background-image": {"type": "image", "url": "Images/Backgrounds/background-?.jpg", "values": ["1", "2", "3"]},
		В этом случае будет выбрана картинка Images/Backgrounds/background-1.jpg, Images/Backgrounds/background-2.jpg или Images/Backgrounds/background-3.jpg

		Пример привязанного к настройке ассета:
		Настройка: 	"background": {"default": "#random", "type": "select", "values": ["1", "2", "3"], "editor": {"title": "Background", "description": "Choose one from predefined background images", "option-descriptions": {"1": "Birches", "2": "Autumn", "3": "Maldives"}, "section": "main", "control": "radio", "autoApplyChanges": true}},
		Ассет: "background-image": {"type": "image", "url": "Images/Backgrounds/background-?.jpg", "valueFrom": "background"},

		Пример привязанного к другому случайному ассету:
		"background-image": {"type": "image", "url": "Images/Backgrounds/background-?.jpg", "values": ["1", "2", "3"]},
		"loading-screen-image": {"type": "custom", "url": "Images/Backgrounds/background-?-loading.jpg", "valueFrom": "background-image"},

		Можно отменять загрузку ассетов из-за настройки (старый способ):
		"texture-fish-1": {"type": "atlas", "url": "Textures/TextureFish1.json", "load-if": {"setting": ["fishes", "1"]}},
		В этом случае текстура будет загружена если настройка fishes равна "1" (или содержит "1" при типе "multi-select")
		+++
		Можно отменять загрузку ассетов из-за настройки (новый способ, работает только в РЕЛИЗАХ):
        "texture-fish-1": {"type": "atlas", "url": "Textures/TextureFish1.json", "condition": {"setting": {"fishes": "1"}}},
        В этом случае текстура будет загружена если настройка fishes равна "1" (или содержит "1" при типе "multi-select").
        Кроме того, можно использовать расширенные методы по отсеву ассетов из-за настроек - "settings-and" и "settings-or":
        "texture-fish-1": {"type": "atlas", "url": "Textures/TextureFish1.json", "condition": {"settings-and": {"hero-message-1": true, "hero-message-2", true, "hero-message-3", true}}},
        В этом случае текстура будет загружена, если все пересичленные настроки будут равны true (или другому параметру, который указан в condition.
        "texture-fish-1": {"type": "atlas", "url": "Textures/TextureFish1.json", "condition": {"settings-or": {"hero-message-1": true, "hero-message-2", true, "hero-message-3", true}}},
        В этом случае ассет загрузится, если одна из настроек будет true (или равна другому указанному параметру).

		Отменить какой-либо ассет для определённого релиза можно так (устаревший метод - сейчас это можно сделать через дашбоард):
		"background-music": {"type": "sound", "url": "Sounds/background.{ogg,mp3}", "facebook-release": "skip"},

		Создать несколько взаимозаменяемых ассетов в зависимости от локали и времени можно так:
        "video-cta|1": {"type": "video", "url": "Video/video1_en.mp4", "condition": {"locale": "en", "time": "2020-00-00T00:00:00.000Z"}},
		"video-cta|2": {"type": "video", "url": "Video/video1_sv.mp4", "condition": {"locale": "sv", "time": "2020-00-00T00:00:00.000Z"}},
		"video-cta|3": {"type": "video", "url": "Video/video2_en.mp4", "condition": {"locale": "en", "time": "2020-02-03T00:00:00.000Z"}},
		"video-cta|4": {"type": "video", "url": "Video/video2_sv.mp4", "condition": {"locale": "sv", "time": "2020-02-03T00:00:00.000Z"}}
		В результате получится ассет:
		"video-cta": {"type": "video", "url": "Video/video2_en.mp4", "width": 600, "height": 480, "condition": {"locale": "en", "time": "2020-02-03T00:00:00.000Z"}},
		Если текущая локаль en (или любая другая кроме sv) и время 2020-02-03T00:00:00.000Z уже наступило.

		Иногда видео смещено по непонятной причине (возможно в метаданных написаны неверные размеры или не стандартное соотношение)
		в этом случае можно указать их в объекте ассета и позиция установится правильно:
		"video-cta": {"type": "video", "url": "Video/video.mp4", "width": 600, "height": 480},

		"jsmpeg" видео после сжатия может иметь другие размеры - указать дополнительный скейл для jsmpeg видео можно так:
		"video-cta": {"type": "video", "url": "Video/video.mp4", "jsmpegScale": 3}
		точно также можно указать скейл для не jsmpeg варианта:
		"video-cta": {"type": "video", "url": "Video/video.mp4", "scale": 0.7}
		учитывайте что маркер jsmpeg может проставиться автоматически (например в релизе Rovio Classic)

		*/

		//Ассеты используемые в css стилях
// 		"background-loading": {"type": "image", "url": "Images/background-loading.jpg"},
		"logotype": {"type": "image", "url": "Images/logotype.png"},
// 		"logotype-publisher": {"type": "image", "url": "Images/logotype-publisher.png"},
		"close-button": {"type": "image", "url": "Images/close-button.png"},
		"banner-star": {"type": "image", "url": "Images/banner-star.png"},
		"banner-icon": {"type": "image", "url": "Images/banner-icon.png"},

		//Текстуры
		"texture": {"type": "atlas", "url": "Textures/Texture.json"},
		"texture-backgrounds": {"type": "atlas", "url": "Textures/TextureBackgrounds.json"},
		"texture-zombie": {"type": "atlas", "url": "Textures/TextureZombie.json"},
		"texture-zombie-second": {"type": "atlas", "url": "Textures/TextureZombie2.json"},
        "texture-cta": {"type": "atlas", "url": "Textures/TextureCta.json"},
        "texture-char": {"type": "atlas", "url": "Textures/TextureTweak.json"},
        "texture-towers": {"type": "atlas", "url": "Textures/TextureTowers.json"},
        "texture-teaser": {"type": "atlas", "url": "Textures/TextureTeaser.json"},

        //Spine
		"char-data": {"type": "json", "url": "Data/TweakD.json"},

        //Звуки
		"music_bg": {"type": "sound", "url": "Sounds/music_bg.mp3", "loadStrategy": "delayed", "playOnEvents": ["Creative Showed"], "volume": 0.5, "loop": true},
		"s_flamethrower_equip.mp3": {"type": "sound", "url": "Sounds/s_flamethrower_equip.mp3", "volume": 1},
		"s_flamethrower_fire.mp3": {"type": "sound", "url": "Sounds/s_flamethrower_fire.mp3", "volume": 0.2},
		"s_cta_win.mp3": {"type": "sound", "url": "Sounds/s_cta_win.mp3", "volume": 1},
		"s_cta_lose.mp3": {"type": "sound", "url": "Sounds/s_cta_lose.mp3", "volume": 1},
		"s_sarge_gun.mp3": {"type": "sound", "url": "Sounds/s_sarge_gun.mp3", "volume": 0.2},
		"s_turret_fire.mp3": {"type": "sound", "url": "Sounds/s_turret_fire.mp3", "volume": 0.2},
		"s_turret_setup.mp3": {"type": "sound", "url": "Sounds/s_turret_setup.mp3", "volume": 1},
		"s_zombie_roar.mp3": {"type": "sound", "url": "Sounds/s_zombie_roar.mp3", "volume": 0.2},
		"s_zombie_fall.mp3": {"type": "sound", "url": "Sounds/s_zombie_fall.mp3", "volume": 0.1},
		"s_zombie_fright.mp3": {"type": "sound", "url": "Sounds/s_zombie_fright.mp3", "volume": 0.1},

		//Шрифты
		"Arial-BoldMT": {"type": "web-font", "url": "Fonts/Arial-BoldMT.css"}

	}
}